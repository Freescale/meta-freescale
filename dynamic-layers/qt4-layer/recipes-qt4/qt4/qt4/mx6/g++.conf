#
# qmake configuration for common gcc
#

QMAKE_COMPILER = gcc

QMAKE_CC       = $(OE_QMAKE_CC)
QMAKE_CFLAGS       += $(OE_QMAKE_CFLAGS) -DLINUX=1 -DEGL_API_FB=1
QMAKE_CFLAGS_RELEASE_WITH_DEBUGINFO += $(OE_QMAKE_CFLAGS)
QMAKE_CFLAGS_PRECOMPILE += -x c-header -c ${QMAKE_PCH_INPUT} -o ${QMAKE_PCH_OUTPUT}
QMAKE_CFLAGS_USE_PRECOMPILE += -include ${QMAKE_PCH_OUTPUT_BASE}

QMAKE_CXX      = $(OE_QMAKE_CXX)
QMAKE_CXXFLAGS     += $(OE_QMAKE_CXXFLAGS) -DLINUX=1 -DEGL_API_FB=1
QMAKE_CXXFLAGS_RELEASE_WITH_DEBUGINFO += $$QMAKE_CFLAGS_RELEASE_WITH_DEBUGINFO
QMAKE_CXXFLAGS_PRECOMPILE += -x c++-header -c ${QMAKE_PCH_INPUT} -o ${QMAKE_PCH_OUTPUT}
QMAKE_CXXFLAGS_USE_PRECOMPILE = $$QMAKE_CFLAGS_USE_PRECOMPILE

QMAKE_LINK     = $(OE_QMAKE_LINK)
QMAKE_LINK_SHLIB   = $(OE_QMAKE_LINK)
QMAKE_LINK_C		= $(OE_QMAKE_LINK)
QMAKE_LINK_C_SHLIB	= $(OE_QMAKE_LINK)
QMAKE_LFLAGS       += $(OE_QMAKE_LDFLAGS)
QMAKE_LFLAGS_NOUNDEF	+= -Wl,--no-undefined
QMAKE_LFLAGS_RPATH        = -Wl,-rpath-link,

QMAKE_PCH_OUTPUT_EXT    = .gch

# -Bsymbolic-functions (ld) support
QMAKE_LFLAGS_BSYMBOLIC_FUNC = -Wl,-Bsymbolic-functions
QMAKE_LFLAGS_DYNAMIC_LIST = -Wl,--dynamic-list,

# do not depend on gdb
CONFIG -= gdb_dwarf_index

# some linking helper...
CONFIG += rpath_libdirs

# for the SDK
isEmpty(QMAKE_QT_CONFIG):QMAKE_QT_CONFIG = $(OE_QMAKE_QT_CONFIG)
